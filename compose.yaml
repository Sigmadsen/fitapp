services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    env_file:
      - .env

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"  # Redis
      - "8001:8001"  # Redis Insight

  flower:
    build: .
    image: mher/flower
    ports:
      - '5555:5555'
    command: celery -A .celery_app flower --broker=redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker

  celery_worker:
    build: .
    command: celery -A .celery_app worker --loglevel=debug
    volumes:
      - .:/app
    depends_on:
      - redis

  celery_beat:
    build: .
    command: celery -A .celery_app beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env


volumes:
  postgres_data: